generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Language {
  EN
  PT
  ES
}

enum RoomStatus {
  waiting
  playing
  analyzing
  finished
}

model Room {
  id         String   @id @default(uuid())
  code       String   @unique
  password   String?
  maxRounds  Int      @default(10)
  maxPlayers Int      @default(4)
  language   Language @default(EN)
  players    Player[]

  status       String   @default("waiting")
  currentRound Int      @default(1)
  currentWord  String?
  prevWords    String[]
  roundTimer   Int      @default(30)

  answers  PlayerAnswer[]
  messages Message[]
}

model Message {
  id        String   @id @default(uuid())
  roomId    String
  playerId  String
  message   String
  createdAt DateTime @default(now())
  room      Room     @relation(fields: [roomId], references: [id])
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
}

model Player {
  id           String         @id @default(uuid())
  socketId     String         @unique
  name         String
  score        Int            @default(0)
  isHost       Boolean        @default(false)
  avatar       String?
  roomId       String?
  room         Room?          @relation(fields: [roomId], references: [id])
  PlayerAnswer PlayerAnswer[]
  messages     Message[]
  localization Localization?
}

model PlayerAnswer {
  id         String  @id @default(uuid())
  playerId   String
  player     Player  @relation(fields: [playerId], references: [id], onDelete: Cascade)
  round      Int
  track      String
  artist     String
  albumImage String?
  preview    String?
  isCorrect  Boolean
  roomId     String
  room       Room    @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Word {
  id       String   @id @default(uuid())
  word     String
  language Language
}

model Localization{
  ip        String  @id
  city      String
  longitude String
  latitude  String
  playerId    String    @unique
  player  Player  @relation(fields: [playerId], references: [id], onDelete: Cascade)
}