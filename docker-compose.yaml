version: "3.8"

services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    networks:
      - app-net
    expose:
      - "3000"

  backend:
    build:
      context: ./back
      dockerfile: Dockerfile
    environment:
      - DATABASE_URL=postgresql://user:password@database:5432/songguesser?schema=public
    depends_on:
      - database
    networks:
      - app-net
    expose:
      - "4000"
    command: sh -c "npx prisma migrate deploy && npm run start:prod"

  database:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: songguesser
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    expose:
      - "9090"
    networks:
      - app-net

  grafana:
    image: grafana/grafana:latest
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - app-net
    depends_on:
      - prometheus
    command: >
      /bin/sh -c "until curl -s http://prometheus:9090/api/v1/status/buildinfo; do echo 'Waiting for Prometheus...'; sleep 2; done; /run.sh"

  # nginx:
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   ports:
  #     - "80:80"
  #   depends_on:
  #     - frontend
  #     - backend
  #     - prometheus
  #     - grafana
  #     - database
  #   networks:
  #     - app-net

volumes:
  postgres_data:

networks:
  app-net:
